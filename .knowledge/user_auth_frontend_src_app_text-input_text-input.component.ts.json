{"is_source_file": true, "format": "TypeScript", "description": "Angular component implementing a reusable text input with label, icon, error messages, and password toggle, supporting reactive forms via ControlValueAccessor.", "external_files": ["./text-input.component.html", "./text-input.component.css"], "external_methods": ["Object.values"], "published": ["ControlValueAccessor", "NG_VALUE_ACCESSOR", "Component", "Input", "forwardRef", "ViewChild", "ElementRef"], "classes": [{"name": "TextInputComponent", "description": "An Angular component providing a customizable text input field with validation, labels, icons, and password visibility toggle."}], "methods": [{"name": "writeValue", "description": "Sets the input value from the model."}, {"name": "registerOnChange", "description": "Registers a callback function to call when the input value changes."}, {"name": "registerOnTouched", "description": "Registers a callback function to call when the input is touched."}, {"name": "setDisabledState", "description": "Sets the disabled state of the input element."}, {"name": "handleInput", "description": "Handles user input event to update value and propagate change."}, {"name": "handleFocus", "description": "Handles focus event, marking the control as touched."}, {"name": "handleBlur", "description": "Handles blur event, marking the control as touched."}, {"name": "togglePasswordVisibility", "description": "Toggles the input type between password and text."}], "calls": ["Object.values"], "search-terms": ["Angular Reactive Form Control", "Password Toggle", "Custom Text Input", "Form Validation", "Icon Input", "ControlValueAccessor Implementation"], "state": 2, "file_id": 21, "knowledge_revision": 53, "git_revision": "", "revision_history": [{"43": ""}, {"52": ""}, {"53": ""}], "ctags": [{"_type": "tag", "name": "TextInputComponent", "path": "/home/kavia/workspace/code-generation/unified-login-page-18843-18852/user_auth_frontend/src/app/text-input/text-input.component.ts", "pattern": "/^export class TextInputComponent implements ControlValueAccessor {$/", "language": "TypeScript", "kind": "class"}, {"_type": "tag", "name": "val", "path": "/home/kavia/workspace/code-generation/unified-login-page-18843-18852/user_auth_frontend/src/app/text-input/text-input.component.ts", "pattern": "/^    const val = (event.target as HTMLInputElement).value;$/", "language": "TypeScript", "kind": "constant"}], "hash": "84324f8472c4b1ff85e209d10366561f", "format-version": 4, "code-base-name": "user_auth_frontend", "filename": "user_auth_frontend/src/app/text-input/text-input.component.ts"}